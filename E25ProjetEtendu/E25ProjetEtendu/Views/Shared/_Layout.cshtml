@using E25ProjetEtendu.Enums
@using E25ProjetEtendu.Services
@using E25ProjetEtendu.Services.IServices
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using E25ProjetEtendu.Extensions

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IOrderService _orderService
@{
	var user = await UserManager.GetUserAsync(User);
	Order? orderToDisplay = null;
	string label = "";
	string color = "";
	string routeAction = "CurrentOrderStatus";

	Order? activeOrder = null;
	Order? lastOrder = null;

	if (user != null)
	{
		activeOrder = await _orderService.GetActiveOrder(user.Id);
		lastOrder = await _orderService.GetMostRecentOrder(user.Id);
	}

	if (activeOrder != null)
	{
		orderToDisplay = activeOrder;

		switch (orderToDisplay.Status)
		{
			case OrderStatus.Pending:
				label = "Commande en attente";
				color = "text-warning";
				break;
			case OrderStatus.InProgress:
				label = "Commande en cours";
				color = "text-warning";
				break;
			case OrderStatus.Delivered:
				label = "Commande termin√©e";
				color = "text-success";
				break;
			case OrderStatus.Cancelled:
				// same logic if active is somehow cancelled (fallback)
				if (Context.Session.GetString("CancelledOrderSeen") != "true")
				{
					label = "Commande annul√©e";
					color = "text-danger";
				}
				else
				{
					label = "Derni√®re commande";
					color = "text-muted";
				}
				break;
		}
	}
	else if (lastOrder != null)
	{
		orderToDisplay = lastOrder;

		if (lastOrder.Status == OrderStatus.Cancelled &&
			Context.Session.GetString("CancelledOrderSeen") != "true")
		{
			label = "Commande annul√©e";
			color = "text-danger";
		}
		else
		{
			label = "Derni√®re commande";
			color = "text-muted";
		}
	}
}

<!DOCTYPE html>
<html lang="fr-CA">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - E25ProjetEtendu</title>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
		  crossorigin="anonymous" referrerpolicy="no-referrer" />
	<link rel="stylesheet" href="~/E25ProjetEtendu.styles.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/js/site.js" asp-append-version="true" />


	<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />
</head>
<body data-userid="@User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier)">

	<header>
		<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
			<div class="container-fluid">
				<a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">E25ProjetEtendu</a>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
						aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>
				<div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
					<ul class="navbar-nav flex-grow-1">
						<li class="nav-item">
							<a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
						</li>
						<li class="nav-item">
							<a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
						</li>
						<li class="nav-item">
							<a class="nav-link text-dark" asp-area="" asp-controller="Produit" asp-action="Index">Liste de produit</a>
						</li>
						<!--Order Status-->
						@if (user != null && orderToDisplay != null && !string.IsNullOrEmpty(label))
						{
							<li class="nav-item">
								<a class="nav-link @color" asp-controller="Order" asp-action="CurrentOrderStatus">
									@label
								</a>
							</li>
						}



					</ul>
					<partial name="_LoginPartial" />
					<ul class="navbar-nav">
						<li class="nav-item position-relative">
							@if (SignInManager.IsSignedIn(User))
							{
								<a class="nav-link text-dark" asp-area="" asp-controller="Produit" asp-action="Pannier" id="nav-cart-icon">
									<i class="fa-solid fa-cart-shopping fa-xl"></i>
									<span id="cart-badge" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
										0
									</span>
								</a>
							}
							else
							{
								<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="/Produit/Pannier">

									<i class="fa-solid fa-cart-shopping fa-xl"></i>
								</a>
							}

						</li>
					</ul>

				</div>
			</div>
		</nav>
	</header>

	<div class="container">
		<main role="main" class="pb-3">
			@RenderBody()
		</main>
	</div>

	<footer class="border-top footer text-muted">
		<div class="container">
			&copy; 2025 - E25ProjetEtendu - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
		</div>
	</footer>

	<!-- ‚úÖ bouton flottant pour ouvrir le mini-panier -->
	<button id="toggle-cart-btn" class="btn btn-primary rounded-circle">
		<i class="fa fa-shopping-cart"></i>
	</button>

	<!-- ‚úÖ mini-panier r√©tractable -->
	<div id="cart-summary">
		<h5 class="border-bottom pb-2 mb-3">Mon panier</h5>
		<div id="cart-summary-content">
			<p>Chargement du panier...</p>
		</div>
	</div>

	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>
	<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
	<script src="~/js/decimal-input-filter.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

	@await RenderSectionAsync("Scripts", required: false)
	<script>
		$('#toggle-cart-btn').click(function () {
			$('#cart-summary').toggleClass('show');
		});

		function afficherMiniPanier() {
			let userId = "@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value";
			let storageKey = 'panier_' + userId;

			let cart = JSON.parse(localStorage.getItem(storageKey)) || [];

			let html = '';

			if (cart.length === 0) {
				html = '<p>Le panier est vide</p>';
			} else {
				html = '<ul class="list-unstyled">';
				cart.forEach(item => {
					html += `<li class="d-flex align-items-center mb-2">
												<img src="/images/${item.Image}" alt="${item.Nom}" style="width:40px; height:40px; object-fit:cover; margin-right:10px;">
												<div><strong>${item.Nom}</strong><br>Qt√©: ${item.Quantite}</div>
											 </li>`;
				});
				let total = cart.reduce((acc, item) => acc + item.Prix * item.Quantite, 0);
				html += `</ul><p class="mt-2"><strong>Total: ${total.toFixed(2)} $</strong></p>`;
			}

			$('#cart-summary-content').html(html);
		}
		function updateCartBadge() {
			// R√©cup√®re l'ID utilisateur expos√© c√¥t√© serveur Razor
			let userId = "@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value";

			if (!userId) {
				console.warn("Aucun utilisateur connect√©. Pas de badge affich√©.");
				return; // On ne montre pas de badge pour utilisateur non connect√©
			}

			let storageKey = 'panier_' + userId; // ‚úÖ cl√© unique par utilisateur
			let cart = JSON.parse(localStorage.getItem(storageKey)) || [];
			let totalQuantity = cart.reduce((acc, item) => acc + item.Quantite, 0);



			let badge = document.getElementById("cart-badge");
			badge.textContent = totalQuantity;

			if (totalQuantity === 0) {
				badge.style.display = 'none';
			} else {
				badge.style.display = 'inline-block';
			}
		}
		$(document).ready(function () {
			afficherMiniPanier();
			$(document).on('click', '.add-to-cart', function () {
				setTimeout(afficherMiniPanier, 100);11111
			});
			$(document).on('click', '.increase-btn, .decrease-btn, #clear-cart-btn', function () {
				setTimeout(afficherMiniPanier, 100);
			});
		});
		$(document).ready(function () {
			// üî• Met √† jour le badge au chargement
			updateCartBadge();

			// üî• Apr√®s ajout au panier
			$(document).on('click', '.add-to-cart', function () {
				setTimeout(updateCartBadge, 100);
			});

			// üî• Apr√®s augmentation de quantit√©
			$(document).on('click', '.increase-btn', function () {
				setTimeout(updateCartBadge, 100);
			});

			// üî• Apr√®s diminution de quantit√©
			$(document).on('click', '.decrease-btn', function () {
				setTimeout(updateCartBadge, 100);
			});

			// üî• Apr√®s vidage du panier
			$(document).on('click', '#clear-cart-btn', function () {
				setTimeout(updateCartBadge, 100);
			});
		});

	</script>
</body>
</html>
