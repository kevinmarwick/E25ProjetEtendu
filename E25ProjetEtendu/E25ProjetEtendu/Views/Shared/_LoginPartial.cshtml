@using Microsoft.AspNetCore.Identity
@using E25ProjetEtendu.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ApplicationUser currentUser = null;
    bool isAdmin = false;

    if (SignInManager.IsSignedIn(User))
    {
        currentUser = await UserManager.GetUserAsync(User);
        if (currentUser != null)
        {
            isAdmin = await UserManager.IsInRoleAsync(currentUser, "Admin");
        }
    }
}

<ul class="navbar-nav">
    @if (currentUser != null)
    {

        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @currentUser.FirstName!</a>
        </li>
        @if (isAdmin)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" id="dashboard" asp-controller="Admin" asp-action="Dashboard">
                    Dashboard
                </a>
            </li>
        }
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
