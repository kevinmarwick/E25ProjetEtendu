<h2 class="mb-4">Votre panier</h2>
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
<script>
    var userId = "@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value";
</script>

<div id="panier-container">
    <!-- Le tableau sera généré par JS -->
</div>

<div class="d-flex justify-content-end gap-3 mt-3">
    <form id="checkout-form" method="post" asp-controller="Payment" asp-action="SubmitPayment" class="m-0">
        <input type="hidden" name="panierJson" id="panierJson" />
        <input type="hidden" name="location" id="hiddenLocation" />
        <div class="form-group mt-3">
            <label for="payment-method" class="form-label">Méthode de paiement</label>
            <select id="payment-method" name="paymentMethod" class="form-select">
                <option value="solde">Utiliser mon solde</option>
                <option value="carte">Carte de crédit</option>
            </select>
        </div>


        <div class="form-group mt-4">
            <label for="delivery-location" class="form-label">Lieu de livraison</label>
            <input type="text" id="delivery-location" class="form-control" placeholder="Ex: D-0007" />
        </div>
        <br />
        <button type="submit" class="btn btn-primary btn-lg" id="checkout-btn" disabled>Passer à la caisse</button>

        <button type="button" id="clear-cart-btn" class="btn btn-danger btn-lg">
            Vider le panier
        </button>
    </form>
</div>

@section Scripts {    

    <script>
        var userId = "@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value";

        function showToast(message, type = "success") {
            const toastEl = document.getElementById("toastMessage");
            const toastBody = toastEl.querySelector(".toast-body");

            toastEl.className = `toast align-items-center text-white bg-${type} border-0`;
            toastBody.textContent = message;

            const bsToast = bootstrap.Toast.getOrCreateInstance(toastEl);
            bsToast.show();
        }

        function Pannier() {
            let storageKey = 'panier_' + userId;
            let cart = JSON.parse(localStorage.getItem(storageKey)) || [];
            let html = '';

            const TPS_RATE = 0.05;
            const TVQ_RATE = 0.09975;

            if (cart.length === 0) {
                html = '<div class="alert alert-info">Votre panier est vide.</div>';
                $('#total').text('0 $');
            } else {
                html += `<div class="table-responsive">
                            <table class="table align-middle">
                                <thead class="table-light">
                                    <tr>
                                        <th>Produit</th>
                                        <th>Prix unitaire</th>
                                        <th>Quantité</th>
                                        <th>Sous-total</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>`;

                let subtotal = 0;
                cart.forEach(item => {
                    let itemSubtotal = item.Prix * item.Quantite;
                    subtotal += itemSubtotal;

                    let isMax = item.Quantite >= item.Stock;
                    let btnClass = isMax ? 'stock-max' : '';

                    html += `<tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <img src="/images/${item.Image}" alt="${item.Nom}" style="width:80px; height:80px; object-fit:cover; margin-right:15px;" />
                                        <span>${item.Nom}</span>
                                    </div>
                                </td>
                                <td>${item.Prix.toFixed(2)} $</td>
                                <td>${item.Quantite}</td>
                                <td>${itemSubtotal.toFixed(2)} $</td>
                                <td>
                                    <button class="btn btn-sm btn-success increase-btn ${btnClass}" data-productid="${item.ProduitId}">+</button>
                                    <button class="btn btn-sm btn-warning decrease-btn" data-productid="${item.ProduitId}">-</button>
                                </td>
                            </tr>`;
                });

                let tps = subtotal * TPS_RATE;
                let tvq = subtotal * TVQ_RATE;
                let total = subtotal + tps + tvq;

                html += `</tbody></table></div>`;

                html += `<div class="text-end mt-3">
                            <p><strong>Sous-total :</strong> ${subtotal.toFixed(2)} $</p>
                            <p><strong>TPS:</strong> ${tps.toFixed(2)} $</p>
                            <p><strong>TVQ :</strong> ${tvq.toFixed(2)} $</p>
                            <h4><strong>Total avec taxes :</strong> ${total.toFixed(2)} $</h4>
                        </div>`;

                $('#total').text(total.toFixed(2) + ' $');
            }

            $('#checkout-btn').prop('disabled', cart.length === 0);
            $('#panier-container').html(html);
        }

        $(document).ready(function () {
            Pannier();

            $(document).on('click', '.increase-btn', function () {
                let productId = parseInt($(this).data('productid'));
                let storageKey = 'panier_' + userId;
                let cart = JSON.parse(localStorage.getItem(storageKey)) || [];
                let item = cart.find(p => p.ProduitId === productId);

                if (item && item.Quantite < item.Stock) {
                    item.Quantite += 1;
                    localStorage.setItem(storageKey, JSON.stringify(cart));
                    Pannier();
                }
            });

            $(document).on('mousedown', '.increase-btn.stock-max', function () {
                const btn = $(this);
                btn.addClass("btn-flash-red");

                setTimeout(() => btn.removeClass("btn-flash-red"), 400);

                const container = btn.closest('td');

                // Vérifie s'il n'y a pas déjà un message
                if (container.find('.stock-msg').length === 0) {
                    const msg = $('<div class="text-danger stock-msg mb-1">Stock maximum atteint</div>');
                    // Ajoute le message juste au-dessus du bloc boutons
                    container.prepend(msg);

                    // Supprime le message après 2 secondes
                    setTimeout(() => msg.fadeOut(300, () => msg.remove()), 2000);
                }
            });



            $(document).on('click', '.decrease-btn', function () {
                let productId = parseInt($(this).data('productid'));
                let storageKey = 'panier_' + userId;
                let cart = JSON.parse(localStorage.getItem(storageKey)) || [];
                let item = cart.find(p => p.ProduitId === productId);
                if (item) {
                    item.Quantite -= 1;
                    if (item.Quantite <= 0) {
                        if (confirm("Voulez-vous retirer ce produit du panier ?")) {
                            cart = cart.filter(p => p.ProduitId !== productId);
                            showToast("Produit retiré du panier.", "warning");
                        } else {
                            item.Quantite = 1;
                        }
                    }
                }
                localStorage.setItem(storageKey, JSON.stringify(cart));
                Pannier();
            });

            $('#clear-cart-btn').click(function () {
                if (confirm("Voulez-vous vraiment vider le panier ?")) {
                    let storageKey = 'panier_' + userId;
                    localStorage.removeItem(storageKey);
                    Pannier();
                    showToast("Panier vidé avec succès.");
                }
            });

            $('#checkout-form').on('submit', function (e) {
                let storageKey = 'panier_' + userId;
                let cart = JSON.parse(localStorage.getItem(storageKey)) || [];

                const location = document.getElementById("delivery-location").value;
                const paymentMethod = $('#payment-method').val();
                $('<input>').attr({
                    type: 'hidden',
                    name: 'paymentMethod',
                    value: paymentMethod
                }).appendTo('#checkout-form');

                if (!location || location.trim() === "") {
                    alert("Veuillez entrer une adresse de livraison avant de procéder au paiement.");
                    e.preventDefault();
                    return;
                }

                const dto = {
                    items: cart.map(item => ({
                        productId: item.ProduitId,
                        quantity: item.Quantite
                    })),
                    location: location
                };

                $('#panierJson').val(JSON.stringify(dto));
            });

            const savedLocation = localStorage.getItem("deliveryLocation");
            if (savedLocation) {
                $('#delivery-location').val(savedLocation);
            }


        });

        // Code désuet, à supprimer?

        // document.getElementById("checkout-btn").addEventListener("click", function (e) {
        //     const location = localStorage.getItem("deliveryLocation");

        //     if (!location || location.trim() === "") {
        //         alert("Veuillez entrer une adresse de livraison avant de procéder au paiement.");
        //         return;
        //     }

        //     window.location.href = "/Payment";
        // });

    </script>

    <!-- Zone pour les toasts -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1100">
        <div id="toastMessage" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body"></div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
}
