@model IEnumerable<E25ProjetEtendu.Models.Produit>
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "IndexProduits";
}

<h1 class="mb-4">Index des Produits</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <a asp-action="AddProduct" class="btn btn-primary mb-3">
            <i class="fas fa-plus-circle"></i> Ajouter un produit
        </a>       

        <a asp-action="IndexCategories" class="btn btn-primary mb-3"><i class="fas fa-plus-circle"></i> Gestion Catégorie</a>
    </div>
</div>

<!-- 🎯 Filtre par catégorie et prix -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <!-- Filtres -->
    <div class="dropdown">
        <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            Filtres
        </button>
        <div class="dropdown-menu p-4 shadow" style="min-width: 300px;">
            <form method="get" asp-action="IndexProduits" id="filterForm" class="d-flex flex-column gap-3">
                <div>
                    <label for="categoryId" class="form-label mb-1">Catégorie</label>
                    <select name="categoryId" id="categoryId" class="form-select form-select-sm">
                        <option value="">-- Toutes --</option>
                        @foreach (var cat in (IEnumerable<SelectListItem>)ViewBag.Categories)
                        {
                            var isSelected = ViewBag.SelectedCategory?.ToString() == cat.Value;
                            <option value="@cat.Value" selected="@(isSelected ? "selected" : null)">
                                @cat.Text
                            </option>
                        }
                    </select>
                </div>

                <div>
                    <label class="form-label mb-1">Prix entre</label>
                    <div class="input-group input-group-sm">
                        <input type="number" step="0.01" min="0" name="minPrice" class="form-control" placeholder="Min"
                               value="@(ViewBag.MinPrice ?? "")" />

                        <input type="number" step="0.01" min="0" name="maxPrice" class="form-control" placeholder="Max"
                               value="@(ViewBag.MaxPrice ?? "")" />

                    </div>
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-sm btn-primary">Appliquer</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Barre de recherche de DataTables -->
    <div id="custom-search-container"></div>
</div>


<table id="productTable" class="table table-hover">
    <thead class="table-light">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Nom)</th>
            <th>@Html.DisplayNameFor(model => model.InventoryQuantity)</th>
            <th>@Html.DisplayNameFor(model => model.Prix)</th>
            <th></th>
            <th>@Html.DisplayNameFor(model => model.SKU)</th>
            <th>@Html.DisplayNameFor(model => model.Category)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-id="@item.ProduitId">
                <td>@item.Nom</td>
                <td>
                    <input type="number" class="form-control form-control-sm qty-input int-only" value="@item.InventoryQuantity" />
                </td>
                <td class="input-with-symbol">
                    <input type="text" class="form-control form-control-sm prix-input decimal-only" value="@item.Prix.ToString("0.00")" />
                </td>
                <td>
                    <button class="btn btn-sm btn-success save-btn d-none">Save</button>
                    <button class="btn btn-sm btn-secondary cancel-btn d-none">Cancel</button>
                </td>
                <td>@item.SKU</td>
                <td>@item.Category?.Name</td>
                <td>
                    <a asp-action="EditProduct" asp-route-id="@item.ProduitId" class="btn btn-sm btn-outline-primary">Modifier</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- 🟦 Modal Ajouter Catégorie -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ajouter une catégorie</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="AddCategory" method="post">
                    <div class="form-group">
                        <label>Nom</label>
                        <input type="text" name="Name" class="form-control" required />
                    </div>
                    <div class="mt-3">
                        <button type="submit" class="btn btn-primary">Ajouter</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 🟦 Modal Ajouter Produit -->
<div class="modal fade" id="addProductModal" tabindex="-1" aria-labelledby="addProductModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ajouter un produit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Redirigé vers la page de création...</p>
                <a asp-action="AddProduct" class="btn btn-primary">Continuer</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            let table = $('#productTable').DataTable({
                columnDefs: [
                    {
                        targets: [1],
                        render: function (data, type, row, meta) {
                            if (type === 'sort') return parseFloat($(data).val()) || 0;
                            return data;
                        }
                    },
                    {
                        targets: [2],
                        render: function (data, type, row, meta) {
                            if (type === 'sort') return parseFloat($(data).val().replace(',', '.')) || 0;
                            return data;
                        }
                    },
                    {
                        targets: [3, 5],
                        orderable: false
                    }
                ],
                language: {
                    search: "Rechercher:",
                    lengthMenu: "Afficher _MENU_ entrées",
                    info: "Affichage de _START_ à _END_ sur _TOTAL_ entrées",
                    paginate: {
                        first: "Premier",
                        last: "Dernier",
                        next: "Suivant",
                        previous: "Précédent"
                    },
                    zeroRecords: "Aucun produit trouvé",
                    infoEmpty: "Aucune entrée disponible",
                    infoFiltered: "(filtré de _MAX_ entrées au total)"
                }
            });

            $("#custom-search-container").append($("#productTable_filter").detach());

            $('#productTable tbody tr').each(function () {
                const row = $(this);
                row.data('original-qty', row.find('.qty-input').val());
                row.data('original-prix', row.find('.prix-input').val());
            });

            $('#productTable').on('input', '.qty-input, .prix-input', function () {
                const row = $(this).closest('tr');
                row.addClass('edited');
                row.find('.save-btn, .cancel-btn').removeClass('d-none');
            });

            $('#productTable').on('click', '.cancel-btn', function () {
                const row = $(this).closest('tr');
                row.find('.qty-input').val(row.data('original-qty'));
                row.find('.prix-input').val(row.data('original-prix'));
                row.removeClass('edited');
                row.find('.save-btn, .cancel-btn').addClass('d-none');
            });

            $('#productTable').on('click', '.save-btn', function () {
                const row = $(this).closest('tr');
                const id = row.data('id');
                const qty = row.find('.qty-input').val();
                const prix = parseFloat(row.find('.prix-input').val().replace(',', '.'));

                $.ajax({
                    url: '@Url.Action("UpdateInventoryAndPrice", "Admin")',
                    method: 'POST',
                    data: { produitId: id, qty: qty, prix: prix },
                    success: function () {
                        row.data('original-qty', qty);
                        row.data('original-prix', prix.toFixed(2).replace('.', ','));
                        row.find('.prix-input').val(prix.toFixed(2).replace('.', ','));
                        row.removeClass('edited');
                        row.find('.save-btn, .cancel-btn').addClass('d-none');
                    },
                    error: function () {
                        alert("Erreur : prix ou quantité invalide.");
                    }
                });
            });
        });
    </script>
}
